/*
 * =============================================================================
 *
 *                   Copyright (c) 2025 BSC
 *                             All rights reserved
 *
 * This file contains BSC proprietary and confidential information and has
 * been developed by BSC within the EPI-SGA1 Project (GA 826647).
 * The permission rights for this file are governed by the EPI Grant Agreement
 * and the EPI Consortium Agreement.
 *
 * ===============================[ INFORMATION ]===============================
 *
 * Author(s)  : Fabio Banchelli
                Rafel Bros Esqueu
 * Contact(s) : fabio.banchelli@bsc.es
                rafel.brosesqueu@bsc.es
 */

/*
 * Sophon SG2042 RISC-V Core
 */

static const riscv_entry_t riscv_sophon_sg2042_pe[] = {
/* CACHE group events */
  {.name = "L1_ICACHE_ACCESS",
   .code = 0x00000001,
   .desc = "L1 instruction cache access"},
  {.name = "L1_ICACHE_MISS",
   .code = 0x00000002,
   .desc = "L1 instruction cache miss"},
  {.name = "ITLB_MISS",
   .code = 0x00000003,
   .desc = "I-UTLB miss"},
  {.name = "DTLB_MISS",
   .code = 0x00000004,
   .desc = "D-UTLB miss"},
  {.name = "JTLB_MISS",
   .code = 0x00000005,
   .desc = "JTLB miss"},
  {.name = "L1_DCACHE_READ_ACCESS",
   .code = 0x0000000c,
   .desc = "L1 data cache read access"},
  {.name = "L1_DCACHE_READ_MISS",
   .code = 0x0000000d,
   .desc = "L1 data cache read miss"},
  {.name = "L1_DCACHE_WRITE_ACCESS",
   .code = 0x0000000e,
   .desc = "L1 data cache write access"},
  {.name = "L1_DCACHE_WRITE_MISS",
   .code = 0x0000000f,
   .desc = "L1 data cache write miss"},
  {.name = "LL_CACHE_READ_ACCESS",
   .code = 0x00000010,
   .desc = "LL Cache read access"},
  {.name = "LL_CACHE_READ_MISS",
   .code = 0x00000011,
   .desc = "LL Cache read miss"},
  {.name = "LL_CACHE_WRITE_ACCESS",
   .code = 0x00000012,
   .desc = "LL Cache write access"},
  {.name = "LL_CACHE_WRITE_MISS",
   .code = 0x00000013,
   .desc = "LL Cache write miss"},
/* INSTRUCTION group events */
  {.name = "INST_BRANCH_MISPREDICT",
   .code = 0x00000006,
   .desc = "Mispredicted branch instructions"},
  {.name = "INST_BRANCH",
   .code = 0x00000007,
   .desc = "Retired branch instructions"},
  {.name = "INST_JMP_MISPREDICT",
   .code = 0x00000008,
   .desc = "Indirect branch mispredict"},
  {.name = "INST_JMP",
   .code = 0x00000009,
   .desc = "Retired jmp instructions"},
  {.name = "INST_STORE",
   .code = 0x0000000b,
   .desc = "Retired store instructions"},
  {.name = "INST_ALU",
   .code = 0x0000001d,
   .desc = "Retired ALU instructions"},
  {.name = "INST_LDST",
   .code = 0x0000001e,
   .desc = "Retired Load/Store instructions"},
  {.name = "INST_VECTOR",
   .code = 0x01f,
   .desc = "Retired Vector instructions"},
  {.name = "INST_CSR",
   .code = 0x00000020,
   .desc = "Retired CSR instructions"},
  {.name = "INST_SYNC",
   .code = 0x00000021,
   .desc = "Retired sync instructions (AMO/LR/SC instructions)"},
  {.name = "INST_UNALIGNED_ACCESS",
   .code = 0x00000022,
   .desc = "Retired Store/Load instructions with unaligned memory access"},
  {.name = "INST_ECALL",
   .code = 0x00000025,
   .desc = "Retired ecall instructions"},
  {.name = "INST_LONG_JP",
   .code = 0x00000026,
   .desc = "Retired long jump instructions"},
  {.name = "INST_FP",
   .code = 0x0000002a,
   .desc = "Retired FPU instructions"},
/* MICROARCHITECTURE group events */
  {.name = "LSU_SPEC_FAIL",
   .code = 0x0000000a,
   .desc = "LSU speculation fail"},
  {.name = "IDU_RF_PIPE_FAIL",
   .code = 0x00000014,
   .desc = "Instruction decode unit launch pipeline failed in RF state"},
  {.name = "IDU_RF_REG_FAIL",
   .code = 0x00000015,
   .desc = "Instruction decode unit launch register file fail in RF state"},
  {.name = "IDU_RF_INSTRUCTION",
   .code = 0x00000016,
   .desc = "retired instruction count of Instruction decode unit in RF (Register File) stage"},
  {.name = "LSU_4K_STALL",
   .code = 0x00000017,
   .desc = "LSU stall times for long distance data access (Over 4K)"},
  {.name = "LSU_OTHER_STALL",
   .code = 0x00000018,
   .desc = "LSU stall times for other reasons (except the 4k stall)"},
  {.name = "LSU_SQ_OTHER_DIS",
   .code = 0x00000019,
   .desc = "LSU store queue discard others"},
  {.name = "LSU_SQ_DATA_DISCARD",
   .code = 0x0000001a,
   .desc = "LSU store queue discard data (uops)"},
  {.name = "BRANCH_DIRECTION_MISPREDICTION",
   .code = 0x0000001b,
   .desc = "Branch misprediction in BTB"},
  {.name = "BRANCH_DIRECTION_PREDICTION",
   .code = 0x0000001c,
   .desc = "All branch prediction in BTB"},
  {.name = "INTERRUPT_ACK_COUNT",
   .code = 0x00000023,
   .desc = "acknowledged interrupt count"},
  {.name = "INTERRUPT_OFF_CYCLE",
   .code = 0x00000024,
   .desc = "PLIC arbitration time when the interrupt is not responded"},
  {.name = "IFU_STALLED_CYCLE",
   .code = 0x00000027,
   .desc = "Number of stall cycles of the instruction fetch unit (IFU)."},
  {.name = "IDU_STALLED_CYCLE",
   .code = 0x00000028,
   .desc = "Number of stall cycles of the instruction decoding unit (IDU) and next-level pipeline unit."},
  {.name = "SYNC_STALL",
   .code = 0x00000029,
   .desc = "Sync instruction stall cycle fence/fence.i/sync/sfence"},
};
